// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Task: config-ts > create tsconfig if not existed 1`] = `
{
  "$schema": "https://json.schemastore.org/tsconfig",
  "compilerOptions": {
    "esModuleInterop": true,
    "forceConsistentCasingInFileNames": true,
    "module": "es2020",
    "moduleResolution": "node",
    "newLine": "lf",
    "noEmit": true,
    "noFallthroughCasesInSwitch": true,
    "noUncheckedIndexedAccess": true,
    "strict": true,
    "target": "ES2021",
  },
}
`;

exports[`Task: config-ts > create tsconfig if not existed 2`] = `
"[STARTED] Create tsconfig.json
[SUCCESS] Create tsconfig.json
"
`;

exports[`Task: config-ts > do not skip if custom config exists 1`] = `
"[STARTED] Create tsconfig.json
[DATA] Create tsconfig from rehearsal config
[SUCCESS] Create tsconfig.json
"
`;

exports[`Task: config-ts > postTsSetup hook from user config 1`] = `
"[STARTED] Create tsconfig.json
[DATA] Create tsconfig from rehearsal config
[DATA] Run postTsSetup from rehearsal config
[SUCCESS] Create tsconfig.json
"
`;

exports[`Task: config-ts > run custom config command with user config provided 1`] = `
"[STARTED] Create tsconfig.json
[DATA] Create tsconfig from rehearsal config
[SUCCESS] Create tsconfig.json
"
`;

exports[`Task: config-ts > skip if tsconfig.json exists with strict on 1`] = `
"[STARTED] Create tsconfig.json
[SKIPPED] Create tsconfig.json
[STARTED] Create tsconfig.json
[SKIPPED] Create tsconfig.json
"
`;

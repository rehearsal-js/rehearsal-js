// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`fix command > base_ts_app (file only) 1`] = `
"info:    @rehearsal/fix<test-version>
[STARTED] Initialize
[SUCCESS] Initialize
[STARTED] Analyzing project dependency graph
[SUCCESS] Analyzing project dependency graph
[STARTED] Infer Types
[DATA] starting...
[DATA] preparing files ...
[DATA] [--------------------] 0/1 files | ETA: **:**:**
[DATA]  processing file: /src/app.ts
[TITLE] Types Inferred
[TITLE]   Duration: 00:00
[TITLE]   3 errors caught by rehearsal
[TITLE]   1 have been fixed by rehearsal
[TITLE]   2 errors need to be fixed manually
[TITLE]     -- 2 ts errors, marked by @ts-expect-error @rehearsal TODO
[TITLE]     -- 0 eslint errors, with details in the report
[SUCCESS] Types Inferred
[SUCCESS]   Duration: 00:00
[SUCCESS]   3 errors caught by rehearsal
[SUCCESS]   1 have been fixed by rehearsal
[SUCCESS]   2 errors need to be fixed manually
[SUCCESS]     -- 2 ts errors, marked by @ts-expect-error @rehearsal TODO
[SUCCESS]     -- 0 eslint errors, with details in the report"
`;

exports[`fix command > base_ts_app (file only) 2`] = `
"// generate a random grid based on a set dimension and random alive/dead cells
export function generateRandomGrid(
  dimensions,
  chars = ['▄', ' ']
) {
  const grid = [];

  // create the grid
  for (let y = 0; y < dimensions[1]; y++) {
    const row = [];
    for (let x = 0; x < dimensions[0]; x++) {
      if (Math.random() > 0.5) {
        row.push(chars[0]);
      } else {
        row.push(chars[1]);
      }
    }

    grid.push(row);
  }

  return grid;
}
"
`;

exports[`fix command > base_ts_app (file only) 3`] = `
"import {
  getLiveNeighborCount,
} from './get-live-neighbor-count.js';

export function applyRules(grid, cellCharState) {
  // clone the grid for the next generation
  const newGrid = grid.map((row) => [...row]);
  // keep track if all of the cells are dead and exit if so
  let totalLiveNeighbors = 0;

  // iterate over each cell, apply the rules and update cell state
  for (let y = 0; y < grid.length; y++) {
    for (let x = 0; x < grid[y].length; x++) {
      const cellState = grid[y][x];
      const liveNeighborCount = getLiveNeighborCount(
        grid,
        [y, x],
        [cellCharState[0], cellCharState[1]]
      );

      totalLiveNeighbors += liveNeighborCount;

      // check the current cell state and apply the rules
      if (cellState === cellCharState[0]) {
        if (liveNeighborCount < 2 || liveNeighborCount > 3) {
          // dead
          newGrid[y][x] = cellCharState[1];
        }

        if (liveNeighborCount == 2 || liveNeighborCount == 3) {
          // alive
          newGrid[y][x] = cellCharState[0];
        }
      } else {
        if (liveNeighborCount == 3) {
          // alive
          newGrid[y][x] = cellCharState[0];
        }
      }
    }
  }

  return [newGrid, totalLiveNeighbors];
}
"
`;

exports[`fix command > base_ts_app (file only) 4`] = `
"// based on a given cell, return the number of live neighbors
export function getLiveNeighborCount(
  grid,
  coords,
  cellCharState
) {
  const [x, y] = coords;

  // 8 neighbors
  const neighbors = [
    [x - 1, y - 1],
    [x - 1, y],
    [x - 1, y + 1],
    [x, y - 1],
    [x, y + 1],
    [x + 1, y - 1],
    [x + 1, y],
    [x + 1, y + 1],
  ];

  // iterate over neighbors
  const liveNeighbors = neighbors.filter(([x, y]) => {
    // handle out of bounds
    if (x < 0 || y < 0 || x >= grid.length || y >= grid.length) {
      return false;
    }

    // if alive add a tally mark
    if (grid[x][y] === cellCharState[0]) {
      return true;
    }
  });

  return liveNeighbors.length;
}
"
`;

exports[`fix command > base_ts_app (file only) 5`] = `
"/*
RULES:
1. Any live cell with fewer than two live neighbours dies, as if by underpopulation.
2. Any live cell with two or three live neighbours lives on to the next generation.
3. Any live cell with more than three live neighbours dies, as if by overpopulation.
4. Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.

These rules, which compare the behavior of the automaton to real life, can be condensed into the following:

  Any live cell with two or three live neighbours survives.
  Any dead cell with three live neighbours becomes a live cell.
  All other live cells die in the next generation. Similarly, all other dead cells stay dead.
*/

// @ts-expect-error @rehearsal TODO TS2792: Cannot find module 'node:process'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
import { stdout } from 'node:process';
import { generateRandomGrid } from './gen-random-grid.js';
import { applyRules } from './apply-rules.js';

// basic just grab the args if they exist
// assume the are valid and in the right order
// gridWidth, gridHeight, cellAliveState, cellDeadState
// @ts-expect-error @rehearsal TODO TS2580: Cannot find name 'process'. Do you need to install type definitions for node? Try \`npm i --save-dev @types/node\`.
const [_bin, _file, ...args] = process.argv;

if (!args.length || args.length < 4) {
  throw new Error(
    'You must provide 4 arguments: gridWidth, gridHeight, cellAliveState, cellDeadState'
  );
}

const [gridWidth, gridHeight, cellAliveState, cellDeadState] = args;

// the initial grid to kick things off
const GRID_SEED = generateRandomGrid(
  [parseInt(gridWidth), parseInt(gridHeight)],
  [cellAliveState, cellDeadState]
);

// when to stop
const RUN_LIMIT = 500;
// remove the terminal cursor so the grid renders nicely
stdout.write('\\\\x1b[?25l');

// update the grid recursively on interval
(function update(prevGrid, runTally = 0): void {
  // set the stdout cursor to the top left
  stdout.cursorTo(0, 0);

  // write the grid to console
  console.log(\`\\\\n\\\\nGeneration: \${runTally}\`);
  console.table(prevGrid);

  // should we stop running
  if (runTally >= RUN_LIMIT) {
    // put the cursor back
    stdout.write('\\\\x1b[?25h');
    return;
  }

  const [newGrid, totalLiveNeighbors] = applyRules(prevGrid, [cellAliveState, cellDeadState]);

  // if all of the cells are dead, stop running
  if (totalLiveNeighbors === 0) {
    console.log(\`Within \${runTally} generations. All cells are dead\`);
    // put the cursor back
    stdout.write('\\\\x1b[?25h');
    return;
  }

  // add a tally mark
  runTally++;

  // recursively call update again within a fps interval so we can throttle the grid updates
  setTimeout(() => {
    update(newGrid, runTally);
  }, 150);
})(GRID_SEED);
"
`;

exports[`fix command > base_ts_app 1`] = `
"info:    @rehearsal/fix<test-version>
[STARTED] Initialize
[SUCCESS] Initialize
[STARTED] Analyzing project dependency graph
[SUCCESS] Analyzing project dependency graph
[STARTED] Infer Types
[DATA] starting...
[DATA] preparing files ...
[DATA] [--------------------] 0/8 files | ETA: **:**:**
[DATA]  processing file: /src/get-live-neighbor-count.ts
[DATA] [==------------------] 1/8 files | ETA: **:**:**
[DATA]  processing file: /src/apply-rules.ts
[DATA] [=====---------------] 2/8 files | ETA: **:**:**
[DATA]  processing file: /src/gen-random-grid.ts
[DATA] [=======-------------] 3/8 files | ETA: **:**:**
[DATA]  processing file: /src/app.ts
[DATA] [==========----------] 4/8 files | ETA: **:**:**
[DATA]  processing file: /src/basic.animal.ts
[DATA] [============--------] 5/8 files | ETA: **:**:**
[DATA]  processing file: /src/basic.food.ts
[DATA] [===============-----] 6/8 files | ETA: **:**:**
[DATA]  processing file: /src/basic.index.ts
[DATA] [=================---] 7/8 files | ETA: **:**:**
[DATA]  processing file: /src/greeting.ts
[TITLE] Types Inferred
[TITLE]   Duration: 00:00
[TITLE]   21 errors caught by rehearsal
[TITLE]   15 have been fixed by rehearsal
[TITLE]   6 errors need to be fixed manually
[TITLE]     -- 6 ts errors, marked by @ts-expect-error @rehearsal TODO
[TITLE]     -- 0 eslint errors, with details in the report
[SUCCESS] Types Inferred
[SUCCESS]   Duration: 00:00
[SUCCESS]   21 errors caught by rehearsal
[SUCCESS]   15 have been fixed by rehearsal
[SUCCESS]   6 errors need to be fixed manually
[SUCCESS]     -- 6 ts errors, marked by @ts-expect-error @rehearsal TODO
[SUCCESS]     -- 0 eslint errors, with details in the report"
`;

exports[`fix command > base_ts_app 2`] = `
"// generate a random grid based on a set dimension and random alive/dead cells
export function generateRandomGrid(
  dimensions: number[],
  chars = ['▄', ' ']
): string[][] {
  const grid = [];

  // create the grid
  for (let y = 0; y < dimensions[1]; y++) {
    const row = [];
    for (let x = 0; x < dimensions[0]; x++) {
      if (Math.random() > 0.5) {
        row.push(chars[0]);
      } else {
        row.push(chars[1]);
      }
    }

    grid.push(row);
  }

  return grid;
}
"
`;

exports[`fix command > base_ts_app 3`] = `
"import {
  getLiveNeighborCount,
} from './get-live-neighbor-count.js';

// @ts-expect-error @rehearsal TODO TS7006: Parameter 'grid' implicitly has an 'any' type.
export function applyRules(grid, cellCharState) {
  // clone the grid for the next generation
  // @ts-expect-error @rehearsal TODO TS7006: Parameter 'row' implicitly has an 'any' type.
  const newGrid = grid.map((row) => [...row]);
  // keep track if all of the cells are dead and exit if so
  let totalLiveNeighbors = 0;

  // iterate over each cell, apply the rules and update cell state
  for (let y = 0; y < grid.length; y++) {
    for (let x = 0; x < grid[y].length; x++) {
      const cellState = grid[y][x];
      const liveNeighborCount = getLiveNeighborCount(
        grid,
        [y, x],
        [cellCharState[0], cellCharState[1]]
      );

      totalLiveNeighbors += liveNeighborCount;

      // check the current cell state and apply the rules
      if (cellState === cellCharState[0]) {
        if (liveNeighborCount < 2 || liveNeighborCount > 3) {
          // dead
          newGrid[y][x] = cellCharState[1];
        }

        if (liveNeighborCount == 2 || liveNeighborCount == 3) {
          // alive
          newGrid[y][x] = cellCharState[0];
        }
      } else {
        if (liveNeighborCount == 3) {
          // alive
          newGrid[y][x] = cellCharState[0];
        }
      }
    }
  }

  return [newGrid, totalLiveNeighbors];
}
"
`;

exports[`fix command > base_ts_app 4`] = `
"// based on a given cell, return the number of live neighbors
export function getLiveNeighborCount(
  // @ts-expect-error @rehearsal TODO TS7006: Parameter 'grid' implicitly has an 'any' type.
  grid,
  coords: number[] | [any, any],
  // @ts-expect-error @rehearsal TODO TS7006: Parameter 'cellCharState' implicitly has an 'any' type.
  cellCharState
): number {
  const [x, y] = coords;

  // 8 neighbors
  const neighbors = [
    [x - 1, y - 1],
    [x - 1, y],
    [x - 1, y + 1],
    [x, y - 1],
    [x, y + 1],
    [x + 1, y - 1],
    [x + 1, y],
    [x + 1, y + 1],
  ];

  // iterate over neighbors
  const liveNeighbors = neighbors.filter(([x, y]) => {
    // handle out of bounds
    if (x < 0 || y < 0 || x >= grid.length || y >= grid.length) {
      return false;
    }

    // if alive add a tally mark
    if (grid[x][y] === cellCharState[0]) {
      return true;
    }
  });

  return liveNeighbors.length;
}
"
`;

exports[`fix command > base_ts_app 5`] = `
"/*
RULES:
1. Any live cell with fewer than two live neighbours dies, as if by underpopulation.
2. Any live cell with two or three live neighbours lives on to the next generation.
3. Any live cell with more than three live neighbours dies, as if by overpopulation.
4. Any dead cell with exactly three live neighbours becomes a live cell, as if by reproduction.

These rules, which compare the behavior of the automaton to real life, can be condensed into the following:

  Any live cell with two or three live neighbours survives.
  Any dead cell with three live neighbours becomes a live cell.
  All other live cells die in the next generation. Similarly, all other dead cells stay dead.
*/

// @ts-expect-error @rehearsal TODO TS2792: Cannot find module 'node:process'. Did you mean to set the 'moduleResolution' option to 'nodenext', or to add aliases to the 'paths' option?
import { stdout } from 'node:process';
import { generateRandomGrid } from './gen-random-grid.js';
import { applyRules } from './apply-rules.js';

// basic just grab the args if they exist
// assume the are valid and in the right order
// gridWidth, gridHeight, cellAliveState, cellDeadState
// @ts-expect-error @rehearsal TODO TS2580: Cannot find name 'process'. Do you need to install type definitions for node? Try \`npm i --save-dev @types/node\`.
const [_bin, _file, ...args] = process.argv;

if (!args.length || args.length < 4) {
  throw new Error(
    'You must provide 4 arguments: gridWidth, gridHeight, cellAliveState, cellDeadState'
  );
}

const [gridWidth, gridHeight, cellAliveState, cellDeadState] = args;

// the initial grid to kick things off
const GRID_SEED = generateRandomGrid(
  [parseInt(gridWidth), parseInt(gridHeight)],
  [cellAliveState, cellDeadState]
);

// when to stop
const RUN_LIMIT = 500;
// remove the terminal cursor so the grid renders nicely
stdout.write('\\\\x1b[?25l');

// update the grid recursively on interval
(function update(prevGrid, runTally = 0): void {
  // set the stdout cursor to the top left
  stdout.cursorTo(0, 0);

  // write the grid to console
  console.log(\`\\\\n\\\\nGeneration: \${runTally}\`);
  console.table(prevGrid);

  // should we stop running
  if (runTally >= RUN_LIMIT) {
    // put the cursor back
    stdout.write('\\\\x1b[?25h');
    return;
  }

  const [newGrid, totalLiveNeighbors] = applyRules(prevGrid, [cellAliveState, cellDeadState]);

  // if all of the cells are dead, stop running
  if (totalLiveNeighbors === 0) {
    console.log(\`Within \${runTally} generations. All cells are dead\`);
    // put the cursor back
    stdout.write('\\\\x1b[?25h');
    return;
  }

  // add a tally mark
  runTally++;

  // recursively call update again within a fps interval so we can throttle the grid updates
  setTimeout(() => {
    update(newGrid, runTally);
  }, 150);
})(GRID_SEED);
"
`;

exports[`fix command > base_ts_app 6`] = `
"import { Food } from './basic.food';

export class Animal {
  say(message: string): string {
    return message;
  }

  feed(food: Food, quantity: number): boolean {
    console.log(food, quantity);
    return false;
  }
}
"
`;

exports[`fix command > base_ts_app 7`] = `
"export class Food {
  title: string;

  constructor(title: string) {
    this.title = title;
  }
}
"
`;

exports[`fix command > base_ts_app 8`] = `
"import { Animal } from './basic.animal';
    import { Food } from './basic.food';

export class Dog extends Animal {
  override say(message: string) : string {
    console.log(message);
    return 'bar';
  }

  override feed(food: Food, quantity: number) : boolean {
    return super.feed(food, quantity);
  }
}
"
`;

exports[`fix command > ember_js_app_4.11 --mode=single-pass 1`] = `
"info:    @rehearsal/fix<test-version>
[STARTED] Initialize
[SUCCESS] Initialize
[STARTED] Analyzing project dependency graph
[SUCCESS] Analyzing project dependency graph
[STARTED] Infer Types
[DATA] starting...
[DATA] preparing files ...
[DATA] [--------------------] 0/30 files | ETA: **:**:**
[DATA]  processing file: /app/app.ts
[DATA] [--------------------] 1/30 files | ETA: **:**:**
[DATA]  processing file: /app/router.ts
[DATA] [=-------------------] 2/30 files | ETA: **:**:**
[DATA]  processing file: /app/adapters/application.ts
[DATA] [==------------------] 3/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/audience-demographics.hbs
[DATA] [==------------------] 4/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/audience-demographics.ts
[DATA] [===-----------------] 5/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/hello-world.gts
[DATA] [====----------------] 6/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/jumbo.hbs
[DATA] [====----------------] 7/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/map.hbs
[DATA] [=====---------------] 8/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/map.ts
[DATA] [======--------------] 9/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/nav-bar.hbs
[DATA] [======--------------] 10/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/rental.hbs
[DATA] [=======-------------] 11/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/rentals.hbs
[DATA] [========------------] 12/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/rentals.ts
[DATA] [========------------] 13/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/share-button.hbs
[DATA] [=========-----------] 14/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/share-button.ts
[DATA] [==========----------] 15/30 files | ETA: **:**:**
[DATA]  processing file: /app/models/rental.ts
[DATA] [==========----------] 16/30 files | ETA: **:**:**
[DATA]  processing file: /app/routes/index.ts
[DATA] [===========---------] 17/30 files | ETA: **:**:**
[DATA]  processing file: /app/routes/rental.ts
[DATA] [============--------] 18/30 files | ETA: **:**:**
[DATA]  processing file: /app/serializers/application.ts
[DATA] [============--------] 19/30 files | ETA: **:**:**
[DATA]  processing file: /app/services/locale.ts
[DATA] [=============-------] 20/30 files | ETA: **:**:**
[DATA]  processing file: /app/templates/about.hbs
[DATA] [==============------] 21/30 files | ETA: **:**:**
[DATA]  processing file: /app/templates/application.hbs
[DATA] [==============------] 22/30 files | ETA: **:**:**
[DATA]  processing file: /app/templates/contact.hbs
[DATA] [===============-----] 23/30 files | ETA: **:**:**
[DATA]  processing file: /app/templates/index.hbs
[DATA] [================----] 24/30 files | ETA: **:**:**
[DATA]  processing file: /app/templates/rental.hbs
[DATA] [================----] 25/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/rental/detailed.hbs
[DATA] [=================---] 26/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/rental/image.hbs
[DATA] [==================--] 27/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/rental/image.ts
[DATA] [==================--] 28/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/rentals/filter.hbs
[DATA] [===================-] 29/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/rentals/filter.ts
[TITLE] Types Inferred
[TITLE]   Duration: 00:00
[TITLE]   107 errors caught by rehearsal
[TITLE]   22 have been fixed by rehearsal
[TITLE]   85 errors need to be fixed manually
[TITLE]     -- 29 ts errors, marked by @ts-expect-error @rehearsal TODO
[TITLE]     -- 54 glint errors, with details in the report
[TITLE]     -- 2 eslint errors, with details in the report
[SUCCESS] Types Inferred
[SUCCESS]   Duration: 00:00
[SUCCESS]   107 errors caught by rehearsal
[SUCCESS]   22 have been fixed by rehearsal
[SUCCESS]   85 errors need to be fixed manually
[SUCCESS]     -- 29 ts errors, marked by @ts-expect-error @rehearsal TODO
[SUCCESS]     -- 54 glint errors, with details in the report
[SUCCESS]     -- 2 eslint errors, with details in the report"
`;

exports[`fix command > ember_js_app_4.11 --mode=single-pass 2`] = `
"<div class=\\"map\\">
  <img
    alt=\\"Map image at coordinates {{@lat}},{{@lng}}\\"
    ...attributes
    src={{this.src}}
    width={{@width}}
    height={{@height}}
  />
</div>"
`;

exports[`fix command > ember_js_app_4.11 --mode=single-pass 3`] = `
"import Component from '@glimmer/component';
// @ts-expect-error @rehearsal TODO TS2307: Cannot find module 'super-rentals/config/environment' or its corresponding type declarations.
import ENV from 'super-rentals/config/environment';

const MAPBOX_API = 'https://api.mapbox.com/styles/v1/mapbox/streets-v11/static';

export default class MapComponent extends Component {
  get src(): string {
    // @ts-expect-error @rehearsal TODO TS2339: Property 'lng' does not exist on type 'Readonly<EmptyObject>'.
    let { lng, lat, width, height, zoom } = this.args;

    let coordinates = \`\${lng},\${lat},\${zoom}\`;
    let dimensions = \`\${width}x\${height}\`;
    let accessToken = \`access_token=\${this.token}\`;

    return \`\${MAPBOX_API}/\${coordinates}/\${dimensions}@2x?\${accessToken}\`;
  }

  get token(): string {
    return encodeURIComponent(ENV.MAPBOX_ACCESS_TOKEN);
  }
}
"
`;

exports[`fix command > ember_js_app_4.11 --mode=single-pass 4`] = `
"import { inject as service } from '@ember/service';
import Component from '@glimmer/component';

const TWEET_INTENT = 'https://twitter.com/intent/tweet';

export default class ShareButtonComponent extends Component {
  // @ts-expect-error @rehearsal TODO TS2564: Property 'router' has no initializer and is not definitely assigned in the constructor.
  @service router: { currentURL: string | URL };
  // @ts-expect-error @rehearsal TODO TS2564: Property 'locale' has no initializer and is not definitely assigned in the constructor.
  @service locale: { current: () => string };

  get currentURL(): URL {
    return new URL(this.router.currentURL, window.location.origin);
  }

  get shareURL(): URL {
    let url = new URL(TWEET_INTENT);

    // @ts-expect-error @rehearsal TODO TS2345: Argument of type 'URL' is not assignable to parameter of type 'string'. Consider verifying both types, using type assertion: '( this.currentURL as string)', or using type guard: 'if ( this.currentURL instanceof string) { ... }'.
    url.searchParams.set('url', this.currentURL);

    // @ts-expect-error @rehearsal TODO TS2339: Property 'text' does not exist on type 'Readonly<EmptyObject>'.
    if (this.args.text) {
      // @ts-expect-error @rehearsal TODO TS2339: Property 'text' does not exist on type 'Readonly<EmptyObject>'.
      url.searchParams.set('text', this.args.text);
    }

    // @ts-expect-error @rehearsal TODO TS2339: Property 'hashtags' does not exist on type 'Readonly<EmptyObject>'.
    if (this.args.hashtags) {
      // @ts-expect-error @rehearsal TODO TS2339: Property 'hashtags' does not exist on type 'Readonly<EmptyObject>'.
      url.searchParams.set('hashtags', this.args.hashtags);
    }

    // @ts-expect-error @rehearsal TODO TS2339: Property 'via' does not exist on type 'Readonly<EmptyObject>'.
    if (this.args.via) {
      // @ts-expect-error @rehearsal TODO TS2339: Property 'via' does not exist on type 'Readonly<EmptyObject>'.
      url.searchParams.set('via', this.args.via);
    }

    url.searchParams.set('locale', this.locale.current());

    return url;
  }
}
"
`;

exports[`fix command > ember_js_app_4.11 --mode=single-pass 5`] = `
"import Model, { attr } from '@ember-data/model';

const COMMUNITY_CATEGORIES = ['Condo', 'Townhouse', 'Apartment'];

export default class RentalModel extends Model {
  // @ts-expect-error @rehearsal TODO TS7008: Member 'title' implicitly has an 'any' type.
  @attr title;
  // @ts-expect-error @rehearsal TODO TS7008: Member 'owner' implicitly has an 'any' type.
  @attr owner;
  // @ts-expect-error @rehearsal TODO TS7008: Member 'city' implicitly has an 'any' type.
  @attr city;
  // @ts-expect-error @rehearsal TODO TS7008: Member 'location' implicitly has an 'any' type.
  @attr location;
  // @ts-expect-error @rehearsal TODO TS2564: Property 'category' has no initializer and is not definitely assigned in the constructor.
  @attr category: string;
  // @ts-expect-error @rehearsal TODO TS7008: Member 'image' implicitly has an 'any' type.
  @attr image;
  // @ts-expect-error @rehearsal TODO TS7008: Member 'bedrooms' implicitly has an 'any' type.
  @attr bedrooms;
  // @ts-expect-error @rehearsal TODO TS7008: Member 'description' implicitly has an 'any' type.
  @attr description;

  get type(): 'Community' | 'Standalone' {
    if (COMMUNITY_CATEGORIES.includes(this.category)) {
      return 'Community';
    } else {
      return 'Standalone';
    }
  }
}
"
`;

exports[`fix command > ember_js_app_4.11 --mode=single-pass 6`] = `
"import Component from \\"@glimmer/component\\";

export interface PrintDateSignature {
  Args: {};
}

export class PrintDate extends Component<PrintDateSignature> {
  <template>
    <span>{{@month}} {{@day}}, {{@year}}</span>
  </template>
}

interface ProfileSummarySignature {
  Args: {};
}

/**
 * @extends {Component<ProfileSummarySignature>}
 */
export class ProfileSummary extends Component<ProfileSummarySignature> {
  name = \\"Bob\\";

  <template>
    <PrintDate @year={{2023}} @month={{\\"January\\"}} @day={{1}} />
    <span>Hello, I am {{this.name}} and I am {{@age}} years old!</span>
    <span>My favorite snack is {{@snack}}.</span>
  </template>
}

export interface HelloWorldCommentSignature {
  Args: {};
}

interface HelloWorldCommentSignature {
  Args: HelloWorldCommentArgs;
}

interface HelloWorldCommentArgs {
  age: number;
  snack: string;
  talent: string;
}

/**
 * @extends {Component<HelloWorldCommentSignature>}
 */
export default class HelloWorld extends Component<HelloWorldCommentSignature> {
  name = \\"world\\";

  <template>
    <ProfileSummary @age={{@age}} @snack={{@snack}} />
    My talent is
    {{@talent}}
  </template>
}
"
`;

exports[`fix command > ember_js_app_4.11 --mode=single-pass 7`] = `"{{yield (hash foo=\\"bar\\")}}"`;

exports[`fix command > ember_js_app_4.11 --mode=single-pass 8`] = `
"import Component from '@glimmer/component';

export default class AudienceDemographics extends Component {
  /**
   * List of items to be rendered in the bar chart
   * @typedef {{ count: number }} HeadCount
   * @returns {HeadCount}
   */
  // @ts-expect-error @rehearsal TODO TS2304: Cannot find name 'HeadCount'.
  get something(): HeadCount {
    return {
      count: 0,
    };
  }
}
"
`;

exports[`fix command > ember_js_app_4.11 1`] = `
"info:    @rehearsal/fix<test-version>
[STARTED] Initialize
[SUCCESS] Initialize
[STARTED] Analyzing project dependency graph
[SUCCESS] Analyzing project dependency graph
[STARTED] Infer Types
[DATA] starting...
[DATA] preparing files ...
[DATA] [--------------------] 0/30 files | ETA: **:**:**
[DATA]  processing file: /app/app.ts
[DATA] [--------------------] 1/30 files | ETA: **:**:**
[DATA]  processing file: /app/router.ts
[DATA] [=-------------------] 2/30 files | ETA: **:**:**
[DATA]  processing file: /app/adapters/application.ts
[DATA] [==------------------] 3/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/audience-demographics.hbs
[DATA] [==------------------] 4/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/audience-demographics.ts
[DATA] [===-----------------] 5/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/hello-world.gts
[DATA] [====----------------] 6/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/jumbo.hbs
[DATA] [====----------------] 7/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/map.hbs
[DATA] [=====---------------] 8/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/map.ts
[DATA] [======--------------] 9/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/nav-bar.hbs
[DATA] [======--------------] 10/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/rental.hbs
[DATA] [=======-------------] 11/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/rentals.hbs
[DATA] [========------------] 12/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/rentals.ts
[DATA] [========------------] 13/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/share-button.hbs
[DATA] [=========-----------] 14/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/share-button.ts
[DATA] [==========----------] 15/30 files | ETA: **:**:**
[DATA]  processing file: /app/models/rental.ts
[DATA] [==========----------] 16/30 files | ETA: **:**:**
[DATA]  processing file: /app/routes/index.ts
[DATA] [===========---------] 17/30 files | ETA: **:**:**
[DATA]  processing file: /app/routes/rental.ts
[DATA] [============--------] 18/30 files | ETA: **:**:**
[DATA]  processing file: /app/serializers/application.ts
[DATA] [============--------] 19/30 files | ETA: **:**:**
[DATA]  processing file: /app/services/locale.ts
[DATA] [=============-------] 20/30 files | ETA: **:**:**
[DATA]  processing file: /app/templates/about.hbs
[DATA] [==============------] 21/30 files | ETA: **:**:**
[DATA]  processing file: /app/templates/application.hbs
[DATA] [==============------] 22/30 files | ETA: **:**:**
[DATA]  processing file: /app/templates/contact.hbs
[DATA] [===============-----] 23/30 files | ETA: **:**:**
[DATA]  processing file: /app/templates/index.hbs
[DATA] [================----] 24/30 files | ETA: **:**:**
[DATA]  processing file: /app/templates/rental.hbs
[DATA] [================----] 25/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/rental/detailed.hbs
[DATA] [=================---] 26/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/rental/image.hbs
[DATA] [==================--] 27/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/rental/image.ts
[DATA] [==================--] 28/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/rentals/filter.hbs
[DATA] [===================-] 29/30 files | ETA: **:**:**
[DATA]  processing file: /app/components/rentals/filter.ts
[TITLE] Types Inferred
[TITLE]   Duration: 00:00
[TITLE]   123 errors caught by rehearsal
[TITLE]   46 have been fixed by rehearsal
[TITLE]   77 errors need to be fixed manually
[TITLE]     -- 28 ts errors, marked by @ts-expect-error @rehearsal TODO
[TITLE]     -- 47 glint errors, with details in the report
[TITLE]     -- 2 eslint errors, with details in the report
[SUCCESS] Types Inferred
[SUCCESS]   Duration: 00:00
[SUCCESS]   123 errors caught by rehearsal
[SUCCESS]   46 have been fixed by rehearsal
[SUCCESS]   77 errors need to be fixed manually
[SUCCESS]     -- 28 ts errors, marked by @ts-expect-error @rehearsal TODO
[SUCCESS]     -- 47 glint errors, with details in the report
[SUCCESS]     -- 2 eslint errors, with details in the report"
`;

exports[`fix command > ember_js_app_4.11 2`] = `
"import Component from \\"@glimmer/component\\";

export interface PrintDateSignature {
  Args: { year: any; day: any; month: any };
}

export class PrintDate extends Component<PrintDateSignature> {
  <template>
    <span>{{@month}} {{@day}}, {{@year}}</span>
  </template>
}

interface ProfileSummarySignature {
  Args: { snack: any; age: any };
}

/**
 * @extends {Component<ProfileSummarySignature>}
 */
export class ProfileSummary extends Component<ProfileSummarySignature> {
  name = \\"Bob\\";

  <template>
    <PrintDate @year={{2023}} @month={{\\"January\\"}} @day={{1}} />
    <span>Hello, I am {{this.name}} and I am {{@age}} years old!</span>
    <span>My favorite snack is {{@snack}}.</span>
  </template>
}

interface HelloWorldCommentSignature {
  Args: HelloWorldCommentArgs;
}

interface HelloWorldCommentArgs {
  age: number;
  snack: string;
  talent: string;
}

/**
 * @extends {Component<HelloWorldCommentSignature>}
 */
export default class HelloWorld extends Component<HelloWorldCommentSignature> {
  name = \\"world\\";

  <template>
    <ProfileSummary @age={{@age}} @snack={{@snack}} />
    My talent is
    {{@talent}}
  </template>
}
"
`;

exports[`fix command > glimmerx_js_app 1`] = `
"info:    @rehearsal/fix<test-version>
[STARTED] Initialize
[SUCCESS] Initialize
[STARTED] Analyzing project dependency graph
[SUCCESS] Analyzing project dependency graph
[STARTED] Infer Types
[DATA] starting...
[DATA] preparing files ...
[DATA] [--------------------] 0/4 files | ETA: **:**:**
[DATA]  processing file: /src/GreetingHeader.ts
[DATA] [=====---------------] 1/4 files | ETA: **:**:**
[DATA]  processing file: /src/App.ts
[DATA] [==========----------] 2/4 files | ETA: **:**:**
[DATA]  processing file: /src/SimpleComponent.ts
[DATA] [===============-----] 3/4 files | ETA: **:**:**
[DATA]  processing file: /src/index.ts
[TITLE] Types Inferred
[TITLE]   Duration: 00:00
[TITLE]   27 errors caught by rehearsal
[TITLE]   16 have been fixed by rehearsal
[TITLE]   11 errors need to be fixed manually
[TITLE]     -- 1 ts errors, marked by @ts-expect-error @rehearsal TODO
[TITLE]     -- 10 glint errors, with details in the report
[TITLE]     -- 0 eslint errors, with details in the report
[SUCCESS] Types Inferred
[SUCCESS]   Duration: 00:00
[SUCCESS]   27 errors caught by rehearsal
[SUCCESS]   16 have been fixed by rehearsal
[SUCCESS]   11 errors need to be fixed manually
[SUCCESS]     -- 1 ts errors, marked by @ts-expect-error @rehearsal TODO
[SUCCESS]     -- 10 glint errors, with details in the report
[SUCCESS]     -- 0 eslint errors, with details in the report"
`;

exports[`fix command > glimmerx_js_app 2`] = `
"import { renderComponent } from \\"@glimmerx/core\\";
import App from \\"./App\\";

const containerElement = document.getElementById(\\"app\\");

// @ts-expect-error @rehearsal TODO TS2769: No overload matches this call..   Overload 1 of 2, '(ComponentClass: object, options: RenderComponentOptions): Promise<void>', gave the following error..     Argument of type 'HTMLElement | null' is not assignable to parameter of type 'RenderComponentOptions'..       Type 'null' is not assignable to type 'RenderComponentOptions'..   Overload 2 of 2, '(ComponentClass: object, element: HTMLElement): Promise<void>', gave the following error..     Argument of type 'HTMLElement | null' is not assignable to parameter of type 'HTMLElement'..       Type 'null' is not assignable to type 'HTMLElement'.
renderComponent(App, containerElement);
"
`;

exports[`fix command > glimmerx_js_app 3`] = `
"import Component, { hbs, tracked } from \\"@glimmerx/component\\";
import { on, action } from \\"@glimmerx/modifier\\";

import \\"./App.css\\";
import GreetingHeader from \\"./GreetingHeader\\";

/**
 * Formats a name to include \\"the Great and Powerful\\" afterwards. This is
 * a ridiculous helper!
 *
 * @param {string} name the name to format
 * @returns {string} the formatted name
 */
function formatName(name: string): string {
  return \`\${name} the Great and Powerful\`;
}

interface FormattedNameSignature {
  Args: {
    name: string;
  };
}
/** @extends {Component<FormattedNameSignature>} */
class FormattedName extends Component {
  static template = hbs\`
    {{formatName this.args.name}}!
  \`;
}

const I_AM_CONSTANT = \\"and I am a constant\\";

interface ComponentAsArgSignature {
  Args: {
    title: import(\\"@glint/template\\").WithBoundArgs<
      typeof Component<FormattedNameSignature>,
      \\"name\\"
    >;
  };
}
/**
 * @type {import('@glimmerx/component').TemplateComponent<ComponentAsArgSignature>}
 */
const ComponentAsArg: import(\\"@glimmerx/component\\").TemplateComponent<ComponentAsArgSignature> = hbs\`
  <h1>I am {{@title}}</h1>
  {{I_AM_CONSTANT}}
\`;

export default class HelloWorld extends Component {
  static template = hbs\`
    <ComponentAsArg @title={{component FormattedName name=\\"Oz\\"}}/>
    <GreetingHeader @greeting=\\"hello\\"/>
    <IncrementableButton @startCount={{100}}/>
  \`;
}

interface IncrementableButtonSignature {
  Args: {
    startCount: number;
  };
}

/** @extends {Component<IncrementableButtonSignature>} */
class IncrementableButton extends Component {
  /** @type {number} the incrementable count */
  // @ts-expect-error @rehearsal TODO TS2339: Property 'startCount' does not exist on type 'Readonly<EmptyObject>'.
  @tracked count: number = this.args.startCount;

  @action increment(): void {
    this.count++;
  }

  static template = hbs\`
    <p>You have clicked the button {{this.count}} times.</p>
    <button {{on \\"click\\" this.increment}}>Click</button>
  \`;
}
"
`;

exports[`fix command > glimmerx_js_app 4`] = `
"import Component, { hbs } from \\"@glimmerx/component\\";
import { helper } from \\"@glimmerx/helper\\";

const or = helper(
  /** @param {[a: *, b: *]} param */
  // @ts-expect-error @rehearsal TODO TS80004: JSDoc types may be moved to TypeScript types.
  ([a, b]) => a || b,
);

interface GreetingHeaderSignature {
  Args: {
    greeting: string;
    src?: string;
    target?: string;
  };
}

/** @extends {Component<GreetingHeaderSignature>} */
export default class GreetingHeader extends Component {
  static template = hbs\`
    <h1>{{@greeting}}, {{or @target 'glimmerx'}}</h1>
    <img src={{this.src}}/>
    {{@age}}
    {{@onion}}
  \`;

  // @ts-expect-error @rehearsal TODO TS7050: Function 'src' lacks a return-type annotation.
  get src() {
    // @ts-expect-error @rehearsal TODO TS2339: Property 'src' does not exist on type 'Readonly<EmptyObject>'.
    return this.args.src || \\"https://picsum.photos/250\\";
  }
}
"
`;

exports[`fix command > glimmerx_js_app 5`] = `""`;

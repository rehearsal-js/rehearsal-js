// Vitest Snapshot v1

exports[`Test sonarqueFormatter > should transform all fields correctly, irregardless of undefined, missing values 1`] = `
"{
  \\"issues\\": [
    {
      \\"engineId\\": \\"rehearsal-ts\\",
      \\"ruleId\\": \\"TS6133\\",
      \\"severity\\": \\"BLOCKER\\",
      \\"type\\": \\"BUG\\",
      \\"primaryLocation\\": {
        \\"message\\": \\"The declaration 'react' is never read or used. Remove the declaration or use it.\\",
        \\"filePath\\": \\"/base/path/file1.ts\\",
        \\"textRange\\": {
          \\"startLine\\": 1,
          \\"startColumn\\": 1,
          \\"endLine\\": 1,
          \\"endColumn\\": 1
        }
      }
    },
    {
      \\"engineId\\": \\"rehearsal-ts\\",
      \\"ruleId\\": \\"TS2322\\",
      \\"severity\\": \\"BLOCKER\\",
      \\"type\\": \\"BUG\\",
      \\"primaryLocation\\": {
        \\"message\\": \\"The variable 'a' has type 'number', but 'string' is assigned. Please convert 'string' to 'number' or change variable's type.\\",
        \\"filePath\\": \\"/base/path/file1.ts\\",
        \\"textRange\\": {
          \\"startLine\\": 1,
          \\"startColumn\\": 10,
          \\"endLine\\": 1,
          \\"endColumn\\": 20
        }
      }
    },
    {
      \\"engineId\\": \\"rehearsal-ts\\",
      \\"ruleId\\": \\"TS2345\\",
      \\"severity\\": \\"BLOCKER\\",
      \\"type\\": \\"BUG\\",
      \\"primaryLocation\\": {
        \\"message\\": \\"Argument of type '{0}' is not assignable to parameter of type 'string'. Consider verifying both types, using type assertion: '({} as string)', or using type guard: 'if ({} instanceof string) { ... }'.\\",
        \\"filePath\\": \\"/base/path/file1.ts\\",
        \\"textRange\\": {
          \\"startLine\\": 1,
          \\"startColumn\\": 10,
          \\"endLine\\": 1,
          \\"endColumn\\": 26
        }
      }
    }
  ]
}"
`;

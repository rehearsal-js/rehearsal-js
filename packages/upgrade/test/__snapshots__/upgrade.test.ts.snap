// Vitest Snapshot v1

exports[`Test upgrade > should output the correct data from upgrade 1`] = `
{
  "items": [
    {
      "analysisTarget": "react-processed.tsx",
      "category": "Error",
      "errorCode": 2304,
      "helpUrl": "https://stackoverflow.com/search?tab=votes&q=ts2304}",
      "hint": "Cannot find name 'NonExistingElement'.",
      "hintAdded": true,
      "message": "Cannot find name 'NonExistingElement'.",
      "nodeKind": "Identifier",
      "nodeLocation": {
        "endColumn": 39,
        "endLine": 7,
        "startColumn": 21,
        "startLine": 7,
      },
      "nodeText": "NonExistingElement",
    },
    {
      "analysisTarget": "react-processed.tsx",
      "category": "Error",
      "errorCode": 2304,
      "helpUrl": "https://stackoverflow.com/search?tab=votes&q=ts2304}",
      "hint": "Cannot find name 'NonExistingElement'.",
      "hintAdded": true,
      "message": "Cannot find name 'NonExistingElement'.",
      "nodeKind": "Identifier",
      "nodeLocation": {
        "endColumn": 26,
        "endLine": 13,
        "startColumn": 8,
        "startLine": 13,
      },
      "nodeText": "NonExistingElement",
    },
    {
      "analysisTarget": "react-processed.tsx",
      "category": "Error",
      "errorCode": 2322,
      "helpUrl": "https://stackoverflow.com/questions/72139358/ts2322-type-typeof-statusenum-is-not-assignable-to-type-statusenum",
      "hint": "Type 'notExistingVariable: any' is being returned or assigned, but type 'ReactNode' is expected. Please convert type 'notExistingVariable: any' to type 'ReactNode', or return or assign a variable of type 'ReactNode'",
      "hintAdded": true,
      "message": "Type '{ $notExistingVariable: any; }' is not assignable to type 'ReactNode'..   Object literal may only specify known properties, and '$notExistingVariable' does not exist in type 'ReactElement<any, string | JSXElementConstructor<any>> | ReactFragment | ReactPortal'.",
      "nodeKind": "ShorthandPropertyAssignment",
      "nodeLocation": {
        "endColumn": 33,
        "endLine": 15,
        "startColumn": 13,
        "startLine": 15,
      },
      "nodeText": "$notExistingVariable",
    },
    {
      "analysisTarget": "react-processed.tsx",
      "category": "Error",
      "errorCode": 2304,
      "helpUrl": "https://stackoverflow.com/search?tab=votes&q=ts2304}",
      "hint": "Cannot find name 'NonExistingFragment'.",
      "hintAdded": true,
      "message": "Cannot find name 'NonExistingFragment'.",
      "nodeKind": "Identifier",
      "nodeLocation": {
        "endColumn": 30,
        "endLine": 22,
        "startColumn": 11,
        "startLine": 22,
      },
      "nodeText": "NonExistingFragment",
    },
    {
      "analysisTarget": "react-processed.tsx",
      "category": "Error",
      "errorCode": 2322,
      "helpUrl": "https://stackoverflow.com/questions/72139358/ts2322-type-typeof-statusenum-is-not-assignable-to-type-statusenum",
      "hint": "The variable 'doesNotExist' has type 'DetailedHTMLProps<HTMLAttributes<HTMLBRElement>, HTMLBRElement', but 'doesNotExist: string' is assigned. Please convert 'doesNotExist: string' to 'DetailedHTMLProps<HTMLAttributes<HTMLBRElement>, HTMLBRElement' or change variable's type.",
      "hintAdded": true,
      "message": "Type '{ doesNotExist: string; }' is not assignable to type 'DetailedHTMLProps<HTMLAttributes<HTMLBRElement>, HTMLBRElement>'..   Property 'doesNotExist' does not exist on type 'DetailedHTMLProps<HTMLAttributes<HTMLBRElement>, HTMLBRElement>'.",
      "nodeKind": "Identifier",
      "nodeLocation": {
        "endColumn": 40,
        "endLine": 29,
        "startColumn": 28,
        "startLine": 29,
      },
      "nodeText": "doesNotExist",
    },
    {
      "analysisTarget": "react-xx.ts",
      "category": "Error",
      "errorCode": 2355,
      "helpUrl": "https://stackoverflow.com/search?tab=votes&q=ts2355}",
      "hint": "A function whose declared type is neither 'void' nor 'any' must return a value.",
      "hintAdded": true,
      "message": "A function whose declared type is neither 'void' nor 'any' must return a value.",
      "nodeKind": "TypeReference",
      "nodeLocation": {
        "endColumn": 55,
        "endLine": 24,
        "startColumn": 40,
        "startLine": 24,
      },
      "nodeText": "Promise<string>",
    },
    {
      "analysisTarget": "react.tsx",
      "category": "Error",
      "errorCode": 2304,
      "helpUrl": "https://stackoverflow.com/search?tab=votes&q=ts2304}",
      "hint": "Cannot find name 'NonExistingElement'.",
      "hintAdded": true,
      "message": "Cannot find name 'NonExistingElement'.",
      "nodeKind": "Identifier",
      "nodeLocation": {
        "endColumn": 39,
        "endLine": 7,
        "startColumn": 21,
        "startLine": 7,
      },
      "nodeText": "NonExistingElement",
    },
    {
      "analysisTarget": "react.tsx",
      "category": "Error",
      "errorCode": 2304,
      "helpUrl": "https://stackoverflow.com/search?tab=votes&q=ts2304}",
      "hint": "Cannot find name 'NonExistingElement'.",
      "hintAdded": true,
      "message": "Cannot find name 'NonExistingElement'.",
      "nodeKind": "Identifier",
      "nodeLocation": {
        "endColumn": 26,
        "endLine": 13,
        "startColumn": 8,
        "startLine": 13,
      },
      "nodeText": "NonExistingElement",
    },
    {
      "analysisTarget": "react.tsx",
      "category": "Error",
      "errorCode": 2322,
      "helpUrl": "https://stackoverflow.com/questions/72139358/ts2322-type-typeof-statusenum-is-not-assignable-to-type-statusenum",
      "hint": "Type 'notExistingVariable: any' is being returned or assigned, but type 'ReactNode' is expected. Please convert type 'notExistingVariable: any' to type 'ReactNode', or return or assign a variable of type 'ReactNode'",
      "hintAdded": true,
      "message": "Type '{ $notExistingVariable: any; }' is not assignable to type 'ReactNode'..   Object literal may only specify known properties, and '$notExistingVariable' does not exist in type 'ReactElement<any, string | JSXElementConstructor<any>> | ReactFragment | ReactPortal'.",
      "nodeKind": "ShorthandPropertyAssignment",
      "nodeLocation": {
        "endColumn": 33,
        "endLine": 15,
        "startColumn": 13,
        "startLine": 15,
      },
      "nodeText": "$notExistingVariable",
    },
    {
      "analysisTarget": "react.tsx",
      "category": "Error",
      "errorCode": 2304,
      "helpUrl": "https://stackoverflow.com/search?tab=votes&q=ts2304}",
      "hint": "Cannot find name 'NonExistingFragment'.",
      "hintAdded": true,
      "message": "Cannot find name 'NonExistingFragment'.",
      "nodeKind": "Identifier",
      "nodeLocation": {
        "endColumn": 30,
        "endLine": 22,
        "startColumn": 11,
        "startLine": 22,
      },
      "nodeText": "NonExistingFragment",
    },
    {
      "analysisTarget": "react.tsx",
      "category": "Error",
      "errorCode": 2322,
      "helpUrl": "https://stackoverflow.com/questions/72139358/ts2322-type-typeof-statusenum-is-not-assignable-to-type-statusenum",
      "hint": "The variable 'doesNotExist' has type 'DetailedHTMLProps<HTMLAttributes<HTMLBRElement>, HTMLBRElement', but 'doesNotExist: string' is assigned. Please convert 'doesNotExist: string' to 'DetailedHTMLProps<HTMLAttributes<HTMLBRElement>, HTMLBRElement' or change variable's type.",
      "hintAdded": true,
      "message": "Type '{ doesNotExist: string; }' is not assignable to type 'DetailedHTMLProps<HTMLAttributes<HTMLBRElement>, HTMLBRElement>'..   Property 'doesNotExist' does not exist on type 'DetailedHTMLProps<HTMLAttributes<HTMLBRElement>, HTMLBRElement>'.",
      "nodeKind": "Identifier",
      "nodeLocation": {
        "endColumn": 40,
        "endLine": 29,
        "startColumn": 28,
        "startLine": 29,
      },
      "nodeText": "doesNotExist",
    },
    {
      "analysisTarget": "template-literal.ts",
      "category": "Error",
      "errorCode": 2339,
      "helpUrl": "https://stackoverflow.com/search?tab=votes&q=ts2339}",
      "hint": "Property 'one' does not exist on type 'object'.",
      "hintAdded": true,
      "message": "Property 'one' does not exist on type 'object'.",
      "nodeKind": "Identifier",
      "nodeLocation": {
        "endColumn": 34,
        "endLine": 7,
        "startColumn": 31,
        "startLine": 7,
      },
      "nodeText": "one",
    },
    {
      "analysisTarget": "template-literal.ts",
      "category": "Error",
      "errorCode": 2339,
      "helpUrl": "https://stackoverflow.com/search?tab=votes&q=ts2339}",
      "hint": "Property 'two' does not exist on type 'object'.",
      "hintAdded": true,
      "message": "Property 'two' does not exist on type 'object'.",
      "nodeKind": "Identifier",
      "nodeLocation": {
        "endColumn": 34,
        "endLine": 13,
        "startColumn": 31,
        "startLine": 13,
      },
      "nodeText": "two",
    },
    {
      "analysisTarget": "template-literal.ts",
      "category": "Error",
      "errorCode": 2339,
      "helpUrl": "https://stackoverflow.com/search?tab=votes&q=ts2339}",
      "hint": "Property 'three' does not exist on type 'object'.",
      "hintAdded": true,
      "message": "Property 'three' does not exist on type 'object'.",
      "nodeKind": "Identifier",
      "nodeLocation": {
        "endColumn": 36,
        "endLine": 19,
        "startColumn": 31,
        "startLine": 19,
      },
      "nodeText": "three",
    },
    {
      "analysisTarget": "ts-errors.ts",
      "category": "Error",
      "errorCode": 2304,
      "helpUrl": "https://stackoverflow.com/search?tab=votes&q=ts2304}",
      "hint": "Cannot find name 'missingVar'.",
      "hintAdded": true,
      "message": "Cannot find name 'missingVar'.",
      "nodeKind": "Identifier",
      "nodeLocation": {
        "endColumn": 32,
        "endLine": 12,
        "startColumn": 22,
        "startLine": 12,
      },
      "nodeText": "missingVar",
    },
    {
      "analysisTarget": "ts-errors.ts",
      "category": "Error",
      "errorCode": 2304,
      "helpUrl": "https://stackoverflow.com/search?tab=votes&q=ts2304}",
      "hint": "Cannot find name 'missingVar'.",
      "hintAdded": true,
      "message": "Cannot find name 'missingVar'.",
      "nodeKind": "Identifier",
      "nodeLocation": {
        "endColumn": 17,
        "endLine": 20,
        "startColumn": 7,
        "startLine": 20,
      },
      "nodeText": "missingVar",
    },
    {
      "analysisTarget": "ts-errors.ts",
      "category": "Error",
      "errorCode": 2304,
      "helpUrl": "https://stackoverflow.com/search?tab=votes&q=ts2304}",
      "hint": "Cannot find name 'missingVarAsWellButThisTimeWeUseVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongString'.",
      "hintAdded": true,
      "message": "Cannot find name 'missingVarAsWellButThisTimeWeUseVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongString'.",
      "nodeKind": "Identifier",
      "nodeLocation": {
        "endColumn": 97,
        "endLine": 22,
        "startColumn": 7,
        "startLine": 22,
      },
      "nodeText": "missingVarAsWellButThisTimeWeUseVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryVeryLongString",
    },
    {
      "analysisTarget": "ts-multiline-hint.ts",
      "category": "Error",
      "errorCode": 2345,
      "helpUrl": "https://stackoverflow.com/questions/42421501/error-ts2345-argument-of-type-t-is-not-assignable-to-parameter-of-type-objec",
      "hint": "Argument of type 'string, number] | undefined' is not assignable to parameter of type 'string, number'. Consider verifying both types, using type assertion: '(
        orderedBreakpointsLongNameConstant.find(([key]) => key === size) as string)', or using type guard: 'if (
        orderedBreakpointsLongNameConstant.find(([key]) => key === size) instanceof string) { ... }'.",
      "hintAdded": true,
      "message": "Argument of type '[string, number] | undefined' is not assignable to parameter of type '[string, number]'..   Type 'undefined' is not assignable to type '[string, number]'.",
      "nodeKind": "CallExpression",
      "nodeLocation": {
        "endColumn": 73,
        "endLine": 41,
        "startColumn": 9,
        "startLine": 41,
      },
      "nodeText": "orderedBreakpointsLongNameConstant.find(([key]) => key === size)",
    },
    {
      "analysisTarget": "ts-multiline-hint.ts",
      "category": "Error",
      "errorCode": 2532,
      "helpUrl": "https://stackoverflow.com/search?tab=votes&q=ts2532}",
      "hint": "Object is possibly 'undefined'.",
      "hintAdded": true,
      "message": "Object is possibly 'undefined'.",
      "nodeKind": "PropertyAccessExpression",
      "nodeLocation": {
        "endColumn": 32,
        "endLine": 45,
        "startColumn": 14,
        "startLine": 45,
      },
      "nodeText": "this.viewportWidth",
    },
    {
      "analysisTarget": "ts-multiline-hint.ts",
      "category": "Error",
      "errorCode": 2532,
      "helpUrl": "https://stackoverflow.com/search?tab=votes&q=ts2532}",
      "hint": "Object is possibly 'undefined'.",
      "hintAdded": true,
      "message": "Object is possibly 'undefined'.",
      "nodeKind": "PropertyAccessExpression",
      "nodeLocation": {
        "endColumn": 30,
        "endLine": 67,
        "startColumn": 12,
        "startLine": 67,
      },
      "nodeText": "this.viewportWidth",
    },
  ],
  "summary": {
    "basePath": "",
    "commandName": "@rehearsal/upgrade",
    "projectName": "@rehearsal/test",
    "timestamp": "9/22/2022, 13:48:38",
    "tsVersion": "",
  },
}
`;
